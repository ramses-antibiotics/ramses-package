% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bridge_and_metrics.R
\name{bridge_tables}
\alias{bridge_tables}
\alias{bridge_episode_prescription_overlap}
\alias{bridge_episode_prescription_initiation}
\alias{bridge_episode_therapy_overlap}
\alias{bridge_inpatient_episodes_date}
\alias{bridge_drug_prescriptions_date}
\title{Create database bridge tables}
\usage{
bridge_tables(conn, overwrite = FALSE, silent = FALSE)

bridge_episode_prescription_overlap(conn, overwrite = FALSE)

bridge_episode_prescription_initiation(conn, overwrite = FALSE)

bridge_episode_therapy_overlap(conn, overwrite = FALSE)

bridge_inpatient_episodes_date(conn, overwrite = FALSE)

bridge_drug_prescriptions_date(conn, overwrite = FALSE)
}
\arguments{
\item{conn}{a database connection}

\item{overwrite}{if \code{TRUE}, the function will overwrite any existing
bridge table on the database. The default is \code{FALSE}}

\item{silent}{if \code{TRUE}, the progress bar will be hidden. The default is 
\code{FALSE}.}
}
\value{
\code{TRUE} if tables were successfully created
}
\description{
Create or re-create bridge tables to facilitate linking prescribing
events with encounters or episodes of care. Bridge tables are used when computing
rates of prescribing per admission or per 1,000 bed-days. Examples are available
from the \link[Ramses]{Ramses} vignette: \code{browseVignettes("Ramses")}.
The resulting tables on the database are named \itemize{
  \item \code{bridge_episode_prescription_overlap}
  \item \code{bridge_episode_prescription_initiation}
  \item \code{bridge_episode_therapy_overlap}
  \item \code{bridge_drug_prescriptions_date}
  \item \code{bridge_inpatient_episodes_date}.
}
}
\details{
Prescriptions with status \code{"entered-in-error"}, \code{"draft"}, 
\code{"cancelled"}, or \code{"unknown"} are not taken into account.
\describe{
   \item{\code{bridge_tables()}}{Generates all bridge tables.}
   \item{\code{bridge_episode_prescription_overlap()}}{Links prescriptions
   with inpatient episodes when they were administered. The resulting 
   table is the natural join of \code{inpatient_episodes} and 
   \code{drug_prescriptions} based on matching patient identifiers 
   and a time overlap between prescriptions and inpatient episodes.}
   \item{\code{bridge_episode_prescription_initiation()}}{Links prescriptions
   with inpatient episodes when they were authored. The resulting table 
   differs from {\code{bridge_episode_prescription_overlap}}: it links prescriptions 
   to the episode referencing the clinical team who prescribed them, rather
   that episodes during which the prescription was administered. The resulting
   table is the natural join of \code{inpatient_episodes} and 
   \code{drug_prescriptions} based on matching patient identifiers 
   and the prescription authoring date being comprised between the episode 
   start and end dates.}
   \item{\code{bridge_episode_therapy_overlap()}}{Links therapy episodes
   with inpatient episodes during which they were administered. The resulting 
   table is the natural join of \code{inpatient_episodes} and 
   \code{drug_therapy_episodes} based on matching patient identifiers 
   and a time overlap between therapy episodes and hospital stays.}
   \item{\code{bridge_drug_prescriptions_date()}}{Links prescriptions with
   the date dimension: the resulting table has one row per date for each day
   during which a prescription was active based on \code{prescription_start}
   and \code{prescription_end} fields. Each \code{prescription_id} and \code{date}
   combination is accompanied by the \emph{pro rata} day of therapy for that particular
   date in the \code{DOT_prescribed} variable.}
   \item{\code{bridge_inpatient_episodes_date()}}{Links inpatient episodes with
   the date dimension: the resulting table has one row per date for each encounter
   episode was taking place. Each \code{encounter_id}, \code{episode_number} and \code{date}
   combination is accompanied by the \emph{pro rata} length of stay in the
   \code{bed_days} variable.}
}
}
\seealso{
\code{browseVignettes("Ramses")}
}
