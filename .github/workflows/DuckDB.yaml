on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'bug_fix/**'
      - 'bugfix/**'
      - 'maint/**'

name: "Legacy DuckDB versions"

jobs:
  DuckDB:
    runs-on: ${{ matrix.config.os }}
    name: DuckDB v${{ matrix.config.duckdb_version }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {duckdb_version: "0.3.0", os: ubuntu-20.04, r: 'release'}
          - {duckdb_version: "0.5.0", os: ubuntu-20.04, r: 'release'}
          - {duckdb_version: "0.6.0", os: ubuntu-20.04, r: 'release'}
          - {duckdb_version: "0.7.0", os: ubuntu-20.04, r: 'release'}
          - {duckdb_version: "0.8.0", os: ubuntu-20.04, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.posit.co/cran/__linux__/focal/latest"
      RSPM_ROOT: "https://packagemanager.posit.co"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CODECOVETOKEN: ${{ secrets.CODECOVETOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          install.packages('devtools')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_github("msberends/AMR", build = TRUE)
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_github("cran/duckdb", ref = Sys.getenv("DUCKDB_VERSION"))
        shell: Rscript {0}
        env: 
          DUCKDB_VERSION: (${{ matrix.config.duckdb_version }})
          
      - name: DuckDB unit tests
        run:  |
          devtools::load_all()
          testthat::test_file(path = "tests/testthat/test-warehousing-duckdb.R", reporter = default_compact_reporter(),
                              stop_on_warning = TRUE, stop_on_failure = TRUE)
        shell: Rscript {0}

