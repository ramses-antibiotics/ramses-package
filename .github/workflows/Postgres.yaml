on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'bug_fix/**'
      - 'bugfix/**'
      - 'maint/**'

name: "Legacy Postgres versions"

jobs:
  Postgres:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.postgres_image }} 
    services:
      postgres:
        image: ${{ matrix.config.postgres_image }} 
        env:
          POSTGRES_DB: RamsesDB_testing
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        config:
          - {postgres_image: "postgres:9.6.10", os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {postgres_image: "postgres:12.10", os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {postgres_image: "postgres:15.2", os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CODECOVETOKEN: ${{ secrets.CODECOVETOKEN }}
      CI_Postgres: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          install.packages('devtools')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_github("msberends/AMR", build = TRUE)
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Postgres unit tests
        run:  |
          devtools::load_all()
          testthat::test_file(path = "tests/testthat/test-warehousing-postgres.R", reporter = default_compact_reporter(),
                              stop_on_warning = TRUE, stop_on_failure = TRUE)
        shell: Rscript {0}

